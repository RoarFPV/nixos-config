# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "amdgpu" "kvm-amd" "cros_ec" "cros_ec_lpcs" "framework_laptop" ];
  boot.extraModulePackages = with config.boot.kernelPackages; [
    framework-laptop-kmod
  ];

  # boot.kernelPatches = [
  #   (lib.mkIf (lib.versionOlder pkgs.linuxPackages_latest.kernel.version "6.9")
  #     {
  #       name = "cros_ec_lpc";
  #       patch = pkgs.fetchpatch {
  #         url = "https://patchwork.kernel.org/series/840830/mbox/";
  #         sha256 = "sha256-7jSEAGInFC+a+ozCyD4dFz3Qgh2JrHskwz7UfswizFw=";
  #       };
  #     })
  # ];

  boot.kernelParams = [ "amdgpu.abmlevel=1" ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/c6ff03fe-5194-44b2-abbb-65030290f022";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/446F-3114";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [{
    device = "/var/lib/swapfile";
    size = 16 * 1024;
  }];


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
